Cel, opis projektu: Projekt i implementacja wieloużytkownikowej aplikacji internetowej do zarządzania publicznymi i prywatnymi repozytoriami zdjęć z systemem komentarzy, ocen, przetwarzaniem obrazów opartym na funkcjach JavaScript i algorytmach AI oraz klasyfikacją albumów komercyjnych i publicznych.
Aplikacja ma pozwalać na zarządzanie albumami, sortowanie i filtrowanie zdjęć według wybranych kryteriów oraz zapewniać podstawowe funkcje takie, jak edycja, dodawanie, usuwanie fotografii, a także zakup wybranych zdjęć lub albumów przez zalogowanych użytkowników aplikacji.
Technologia AI zostanie w aplikacji użyta m.in. do zwiększania jakości zdjęć. Funkcje te będą oparte na rozwiązaniach open-source, które pozwalają na poprawę jakości obrazu przy użyciu gotowych modeli AI. Funkcje JavaScript natomiast zostaną wykorzystane do takich operacji na obrazach, jak: zmiana kontrastu, nasycenia, ekspozycji, stopnia rozmycia itd., co pozwoli użytkownikom na szybkie modyfikacje zdjęć bez konieczności korzystania z zewnętrznych narzędzi. Dodawane do galerii zdjęcia mogą być automatycznie oznaczane za pomocą widocznych lub ukrytych znaków wodnych, aby umożliwić zapewnienie egzekwowania praw autorskich w przypadku nieautoryzowanego powielania zdjęć. Projekt zakłada także implementację funkcji pozwalających na bezpieczne przechowywanie danych oraz zapewnienie przyjaznego interfejsu użytkownika.


Funkcjonalności:
•	Tworzenia użytkownika,
•	Usuwanie użytkownika,
•	Tworzenie albumu z wydarzenia,
•	Dodawanie zdjęć do utworzonego albumu,
•	Usuwanie zdjęć z albumu,
•	Usuwanie albumu,
•	Sortowanie zdjęć (np. według nazwy)
•	Wyszukiwanie albumów za pomocą:
o	Nazwa wydarzenia,
o	Nazwa fotografa,
o	Nazwa organizatora,
o	Nazwa lokalizacji,
o	Domyślne wyświetlanie chronologicznie od najnowszych do najstarszych.
•	Zakup zdjęć:
o	Wybrane zdjęcia,
o	Cały album,

Grupy użytkowników:
•	Administrator,
•	Użytkownik (klient - fotograf).


Technologie:
Frontend:
	HTML, CSS - struktura i stylizacja strony
	JavaScript - dynamiczne elementy interfejsu użytkownika
	Framework React – ułatwi budowę interaktywnych interfejsów
Backend:
	Node.js – zarządzania logiką aplikacji i przetwarzania żądań
	Express (Node.js) – przyśpieszenie rozwoju Backend’u
Baza danych:
Firebase - przechowywanie metadanych zdjęć, użytkowników i albumów.
Hosting i serwery:
Wstępnie zakładam oparcie się na localhost oraz Firebase bez hostingu.
Bezpieczeństwo:
OAuth – implementacja do autoryzacji i uwierzytelniania
	Cetryfikaty SSL – zabezpieczenie transmisji danych
