{"version":3,"sources":["firebaseConfig.js","components/Header.js","components/Footer.js","components/ImageModal.js","components/Alert.js","components/Gallery.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAnalytics","getAuth","provider","GoogleAuthProvider","storage","getStorage","db","getFirestore","Header","_ref","user","onLogout","React","createElement","className","Fragment","role","href","onClick","async","window","confirm","signOut","error","console","FontAwesomeIcon","icon","faRightFromBracket","Footer","ImageModal","imageUrl","onClose","onPrev","onNext","useEffect","handleKeyPress","e","key","addEventListener","removeEventListener","stopPropagation","faTimes","faChevronLeft","src","alt","faChevronRight","Alert","message","timer","setTimeout","clearTimeout","Gallery","selectedImageIndex","setSelectedImageIndex","useState","images","setImages","uploadError","setUploadError","selectedFile","setSelectedFile","alertMessage","setAlertMessage","imageArray","i","push","getFileUrl","fileName","userId","currentUser","uid","fileRef","ref","getDownloadURL","then","url","log","prevImages","catch","type","id","onChange","file","target","files","storageRef","name","uploadBytes","snapshot","document","getElementById","value","uploadFile","map","image","index","handlePrev","prevIndex","length","handleNext","Login","onLoginSuccess","setError","signInWithPopup","userRef","doc","getDoc","exists","setDoc","displayName","email","adminRef","adminDoc","adminEmail","data","merge","warn","library","add","App","setUser","unsubscribe","onAuthStateChanged","userDoc","userData","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","applyTheme","matchMedia","matches","body","classList","remove","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.5ea33e94.chunk.js","sourcesContent":["// Importowanie funkcji z SDK Firebase\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getStorage } from \"firebase/storage\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { ref, uploadBytes } from 'firebase/storage';\n\n// Konfiguracja Firebase - skopiowana z Firebase Console\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAE6S9fI8SYxBTIcm7gCI3cOTrQkKWJRxw\",\n    authDomain: \"projekt-galeria-sypniewski-m.firebaseapp.com\",\n    projectId: \"projekt-galeria-sypniewski-m\",\n    storageBucket: \"projekt-galeria-sypniewski-m.firebasestorage.app\",\n    messagingSenderId: \"965126286990\",\n    appId: \"1:965126286990:web:838ac7b5c34b09d90ba3df\",\n    measurementId: \"G-J180LR3YQF\"\n};\n\n// Inicjalizacja aplikacji Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\n// Inicjalizacja usług Firebase\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\nconst storage = getStorage(app);\nconst db = getFirestore(app);\n\nconst uploadFile = (file) => {\n    const userId = auth.currentUser.uid; // Pobierz userId z Firebase Authentication\n    const storageRef = ref(storage, `images/${userId}/${file.name}`);\n\n    uploadBytes(storageRef, file).then((snapshot) => {\n        console.log('Uploaded a blob or file!', snapshot);\n    }).catch((error) => {\n        console.error('Error uploading file:', error);\n    });\n};\n\n// Eksportowanie funkcji\nexport { auth, provider, storage, db };\n","// src/components/Header.js\nimport React from \"react\";\nimport { auth } from \"../firebaseConfig\";\nimport { signOut } from \"firebase/auth\";\nimport \"./Header.css\"; // Stylowanie dla nagłówka\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRightFromBracket } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Header = ({ user, onLogout }) => {\n    const handleLogoutClick = async () => {\n        const confirmLogout = window.confirm(\"Czy na pewno chcesz się wylogować?\");\n        if (confirmLogout) {\n            try {\n                await signOut(auth);\n                onLogout(); // Funkcja przekazana z App.js\n            } catch (error) {\n                console.error(\"Błąd wylogowania:\", error);\n            }\n        }\n    };\n\n    return (\n        <header className=\"App-header\">\n            <h1>Galeria Zdjęć</h1>\n            {user && (\n                <>\n                    {user.role === 'admin' && ( // Sprawdzenie roli użytkownika\n                        <a href=\"/admin-panel\" className=\"admin-link\">Panel Administracyjny</a>\n                    )}\n                    <button className=\"logout-button\" onClick={handleLogoutClick}>\n                        Wyloguj <FontAwesomeIcon icon={faRightFromBracket} />\n                    </button>\n                </>\n            )}\n        </header>\n    );\n};\n\nexport default Header;\n","// src/components/Footer.js\nimport React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer className=\"App-footer\">\n            <p>&copy; 2024 Projekt Galeria</p>\n        </footer>\n    );\n}\n\nexport default Footer;\n\n\n// // src/components/Footer.js\n// import React from 'react';\n\n// const Footer = () => {\n//     return (\n//         <footer>\n//             <p>&copy; 2024 Sypniewski Marcin. Wszelkie prawa zastrzeżone.</p>\n//         </footer>\n//     );\n// };\n\n// export default Footer;\n","import React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport './ImageModal.css';\n\nconst ImageModal = ({ imageUrl, onClose, onPrev, onNext }) => {\n    useEffect(() => {\n        const handleKeyPress = (e) => {\n            if (e.key === 'Escape') onClose();\n            if (e.key === 'ArrowLeft') onPrev();\n            if (e.key === 'ArrowRight') onNext();\n        };\n\n        window.addEventListener('keydown', handleKeyPress);\n        return () => window.removeEventListener('keydown', handleKeyPress);\n    }, [onClose, onPrev, onNext]);\n\n    return (\n        <div className=\"modal-overlay\" onClick={onClose}>\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n                <button className=\"modal-close\" onClick={onClose}>\n                    <FontAwesomeIcon icon={faTimes} />\n                </button>\n                <button className=\"modal-nav modal-prev\" onClick={onPrev}>\n                    <FontAwesomeIcon icon={faChevronLeft} />\n                </button>\n                <img src={imageUrl} alt=\"Powiększone zdjęcie\" />\n                <button className=\"modal-nav modal-next\" onClick={onNext}>\n                    <FontAwesomeIcon icon={faChevronRight} />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ImageModal;\n","import React, { useEffect } from 'react';\nimport './Alert.css'; // Importuj style\n\nconst Alert = ({ message, onClose }) => {\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            onClose(); // Zamknij alert po 5 sekundach\n        }, 5000);\n\n        return () => clearTimeout(timer); // Wyczyść timer po odmontowaniu\n    }, [onClose]);\n\n    return (\n        <div className=\"alert\">\n            {message}\n        </div>\n    );\n};\n\nexport default Alert;\n","// src/components/Gallery.js\nimport React, { useState, useEffect } from \"react\";\nimport ImageModal from \"./ImageModal\";\nimport Alert from \"./Alert\"; // Importuj komponent Alert\nimport { storage, auth } from '../firebaseConfig'; // Importuj storage i auth\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport \"./Gallery.css\";\n\nfunction Gallery() {\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n    const [images, setImages] = useState([]);\n    const [uploadError, setUploadError] = useState('');\n    const [selectedFile, setSelectedFile] = useState(null); // Stan do przechowywania wybranego pliku\n    const [alertMessage, setAlertMessage] = useState(''); // Stan do przechowywania komunikatu alertu\n\n    // Generowanie tablicy obrazków o nazwach 1-29\n    useEffect(() => {\n        const imageArray = [];\n        for (let i = 1; i <= 29; i++) {\n            imageArray.push(\n                `https://raw.githubusercontent.com/SypniewskiMarcin/projekt-galeria-sypniewski-marcin/refs/heads/main/public/images/2024-11-05_fot_marcin-sypniewski_@pierwiastek-${i}.jpg`)\n        }\n        setImages(imageArray);\n    }, []);\n\n    const handlePrev = () => {\n        setSelectedImageIndex(prevIndex =>\n            prevIndex > 0 ? prevIndex - 1 : images.length - 1\n        );\n    };\n\n    const handleNext = () => {\n        setSelectedImageIndex(prevIndex =>\n            prevIndex < images.length - 1 ? prevIndex + 1 : 0\n        );\n    };\n\n    // Funkcja do przesyłania plików\n    const uploadFile = (file) => {\n        const userId = auth.currentUser.uid; // Pobierz userId z Firebase Authentication\n        const storageRef = ref(storage, `images/${userId}/${file.name}`);\n\n        uploadBytes(storageRef, file).then((snapshot) => {\n            console.log('Uploaded a blob or file!', snapshot);\n            // Po przesłaniu pliku, możesz od razu pobrać URL\n            getFileUrl(file.name); // Wywołaj funkcję do pobierania URL\n            setAlertMessage('Plik wysłany pomyślnie!'); // Ustaw komunikat o sukcesie\n            setSelectedFile(null); // Wyczyść wybrane plik\n            document.getElementById('fileInput').value = ''; // Wyczyść pole input\n        }).catch((error) => {\n            console.error('Error uploading file:', error);\n            setUploadError('Błąd przesyłania pliku. Spróbuj ponownie.'); // Ustaw komunikat o błędzie\n        });\n    };\n\n    // Funkcja do pobierania URL pliku\n    const getFileUrl = (fileName) => {\n        const userId = auth.currentUser.uid; // Pobierz userId\n        const fileRef = ref(storage, `images/${userId}/${fileName}`);\n\n        getDownloadURL(fileRef)\n            .then((url) => {\n                console.log('File available at', url);\n                // Możesz użyć tego URL do wyświetlenia obrazu w aplikacji\n                setImages(prevImages => [...prevImages, url]); // Dodaj nowy URL do tablicy obrazków\n            })\n            .catch((error) => {\n                console.error('Error getting file URL:', error);\n            });\n    };\n\n    return (\n        <main>\n            <div className=\"upload-container\">\n                <input\n                    type=\"file\"\n                    id=\"fileInput\"\n                    onChange={(e) => {\n                        const file = e.target.files[0];\n                        setSelectedFile(file); // Ustaw wybrany plik w stanie\n                    }}\n                    className=\"file-input\" // Dodaj klasę do stylizacji\n                />\n                <button\n                    onClick={() => {\n                        if (selectedFile) {\n                            uploadFile(selectedFile); // Wywołaj funkcję przesyłania pliku\n                        } else {\n                            setUploadError('Proszę wybrać plik przed wysłaniem.'); // Komunikat o błędzie\n                        }\n                    }}\n                    className=\"upload-button\" // Dodaj klasę do stylizacji\n                >\n                    Wyślij\n                </button>\n                {uploadError && <p className=\"error-message\">{uploadError}</p>} {/* Wyświetl błąd, jeśli wystąpił */}\n            </div>\n\n            {/* Wyświetl alert, jeśli jest komunikat */}\n            {alertMessage && <Alert message={alertMessage} onClose={() => setAlertMessage('')} />}\n\n            <div className=\"gallery\">\n                {images.map((image, index) => (\n                    <div\n                        key={index}\n                        className=\"gallery-item\"\n                        onClick={() => setSelectedImageIndex(index)}\n                    >\n                        <img src={image} alt={`Zdjęcie ${index + 1}`} />\n                    </div>\n                ))}\n            </div>\n\n            {selectedImageIndex !== null && (\n                <ImageModal\n                    imageUrl={images[selectedImageIndex]}\n                    onClose={() => setSelectedImageIndex(null)}\n                    onPrev={handlePrev}\n                    onNext={handleNext}\n                />\n            )}\n        </main>\n    );\n}\n\nexport default Gallery;\n","// src/components/Login.js\nimport React, { useState } from 'react';\nimport { auth, provider } from '../firebaseConfig';\nimport { signInWithPopup } from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { db } from '../firebaseConfig'; // Importuj instancję Firestore\n\nconst Login = ({ onLoginSuccess }) => {\n    const [error, setError] = useState('');\n\n    const handleGoogleSignIn = async () => {\n        try {\n            const result = await signInWithPopup(auth, provider);\n            const user = result.user;\n\n            // Sprawdź, czy użytkownik już istnieje w Firestore\n            const userRef = doc(db, 'users', user.uid);\n            const userDoc = await getDoc(userRef);\n\n            if (!userDoc.exists()) {\n                // Użytkownik nie istnieje, dodaj go do Firestore\n                await setDoc(userRef, {\n                    uid: user.uid,\n                    name: user.displayName,\n                    email: user.email,\n                    role: 'user' // Domyślna rola\n                });\n            }\n\n            // Sprawdź, czy użytkownik jest administratorem\n            const adminRef = doc(db, 'settings', 'admin');\n            const adminDoc = await getDoc(adminRef);\n\n            // Sprawdź, czy dokument admin istnieje\n            let role = 'user'; // Domyślna rola\n            if (adminDoc.exists()) {\n                const adminEmail = adminDoc.data().email;\n\n                if (user.email === adminEmail) {\n                    // Użytkownik jest administratorem\n                    role = 'admin';\n                    await setDoc(userRef, { role: 'admin' }, { merge: true });\n                }\n            } else {\n                console.warn('Dokument admin nie istnieje w kolekcji settings.');\n            }\n\n            console.log('Zalogowano pomyślnie');\n            onLoginSuccess({ ...user, role }); // Przekaż dane użytkownika i rolę do callbacka\n        } catch (error) {\n            setError(error.message); // Ustaw komunikat o błędzie\n            console.error('Błąd logowania:', error);\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <h2>Zaloguj się</h2>\n            <button className=\"login-button\" onClick={handleGoogleSignIn}>\n                Zaloguj się przez Google\n            </button>\n            {error && <p className=\"error-message\">{error}</p>} {/* Wyświetl błąd, jeśli wystąpił */}\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Gallery from './components/Gallery';\nimport Login from './components/Login';\nimport { auth } from './firebaseConfig';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport './App.css';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faRightFromBracket, faTimes, faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from './firebaseConfig';\n\nlibrary.add(faRightFromBracket, faTimes, faChevronLeft, faChevronRight);\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // Sprawdzamy, czy użytkownik jest zalogowany\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n      if (currentUser) {\n        // Pobierz dane użytkownika z Firestore\n        const userRef = doc(db, 'users', currentUser.uid);\n        const userDoc = await getDoc(userRef);\n\n        // Ustaw użytkownika w stanie z rolą\n        const role = userDoc.exists() ? userDoc.data().role : 'user'; // Domyślna rola\n        setUser({ ...currentUser, role });\n      } else {\n        setUser(null); // Ustaw użytkownika na null, jeśli brak\n      }\n    });\n\n    // Zwracamy funkcję czyszczącą subskrypcję\n    return () => unsubscribe();\n  }, []);\n\n  const handleLoginSuccess = async (userData) => {\n    // Ustaw użytkownika po zalogowaniu\n    const userRef = doc(db, 'users', userData.uid);\n    const userDoc = await getDoc(userRef);\n    const role = userDoc.exists() ? userDoc.data().role : 'user'; // Domyślna rola\n    setUser({ ...userData, role }); // Ustaw użytkownika z rolą\n  };\n\n  return (\n    <div className=\"App\">\n      <Header user={user} onLogout={() => setUser(null)} />\n      {!user ? (\n        <Login onLoginSuccess={handleLoginSuccess} />\n      ) : (\n        <Gallery />\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nfunction applyTheme() {\n  const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n  if (isDarkMode) {\n    document.body.classList.add('dark-mode');\n  } else {\n    document.body.classList.remove('dark-mode');\n  }\n}\n\n// Nasłuchuj zmian preferencji motywu\nwindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', applyTheme);\n\n// Zastosuj motyw przy pierwszym załadowaniu\napplyTheme();\n"],"sourceRoot":""}