rules_version = '2';

// Reguły dla Cloud Firestore
service cloud.firestore {
  match /databases/{database}/documents {
    // Funkcje pomocnicze
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/settings/admin) &&
        get(/databases/$(database)/documents/settings/admin).data.email == request.auth.token.email;
    }

    function isValidAlbum(album) {
      return album.name is string &&
             album.name.size() >= 3 &&
             album.name.size() <= 100 &&
             album.author.uid is string &&
             album.isPublic is bool &&
             album.createdAt is timestamp;
    }

    // Reguły dla users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if request.auth.uid == userId;
    }

    // Reguły dla albums
    match /albums/{albumId} {
      allow read: if true;
      // Uproszczona reguła dla tworzenia albumów
      allow create: if isAuthenticated() && 
                   request.resource.data.author.uid == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        (resource.data.author.uid == request.auth.uid || isAdmin());
    }

    // Reguły dla settings
    match /settings/{document} {
      allow read: if isAuthenticated();
      allow write: if false;
    }
  }
}