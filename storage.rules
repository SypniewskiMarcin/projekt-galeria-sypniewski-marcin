rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Funkcje pomocnicze
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAdmin() {
      return hasRole('admin');
    }
    
    // Reguły dla zdjęć w albumach
    match /albums/{albumId}/{photoName} {
      allow read: if 
        firestore.get(/databases/(default)/documents/albums/$(albumId)).data.isPublic ||
        isOwner(firestore.get(/databases/(default)/documents/albums/$(albumId)).data.ownerId) ||
        isAdmin();
      allow write: if isSignedIn();
      allow delete: if 
        isOwner(firestore.get(/databases/(default)/documents/albums/$(albumId)).data.ownerId) ||
        isAdmin();
    }
    
    // Reguły dla zdjęć profilowych
    match /profiles/{userId}/{fileName} {
      allow read: if true;
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Reguły dla zdjęć tymczasowych (np. podczas edycji)
    match /temp/{userId}/{fileName} {
      allow read, write: if isOwner(userId);
      allow delete: if isOwner(userId) || isAdmin();
    }
  }
} 